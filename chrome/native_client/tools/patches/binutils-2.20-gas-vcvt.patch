Port of the fix for PR11109
http://sourceware.org/cgi-bin/cvsweb.cgi/src/gas/config/tc-arm.c.diff?r1=1.425&r2=1.426&cvsroot=src&f=h
diff --git a/gas/config/tc-arm.c b/gas/config/tc-arm.c
diff -ru a/gas/config/tc-arm.c b/gas/config/tc-arm.c
--- a/gas/config/tc-arm.c	2009-08-29 18:10:59.000000000 -0400
+++ b/gas/config/tc-arm.c	2010-04-28 14:47:12.000000000 -0400
@@ -13539,12 +13539,22 @@
 }
 
 static void
-do_neon_cvt (void)
+do_neon_cvt_1 (bfd_boolean round_to_zero ATTRIBUTE_UNUSED)
 {
   enum neon_shape rs = neon_select_shape (NS_DDI, NS_QQI, NS_FFI, NS_DD, NS_QQ,
     NS_FD, NS_DF, NS_FF, NS_QD, NS_DQ, NS_NULL);
   int flavour = neon_cvt_flavour (rs);
 
+  /* PR11109: Handle round-to-zero for VCVT conversions.  */
+  if (round_to_zero
+      && ARM_CPU_HAS_FEATURE (cpu_variant, fpu_arch_vfp_v2)
+      && (flavour == 0 || flavour == 1 || flavour == 8 || flavour == 9)
+      && (rs == NS_FD || rs == NS_FF))
+    {
+      do_vfp_nsyn_cvtz ();
+      return;
+    }
+
   /* VFP rather than Neon conversions.  */
   if (flavour >= 6)
     {
@@ -13645,6 +13655,18 @@
 }
 
 static void
+do_neon_cvtr (void)
+{
+  do_neon_cvt_1 (FALSE);
+}
+
+static void
+do_neon_cvt (void)
+{
+  do_neon_cvt_1 (TRUE);
+}
+
+static void
 do_neon_cvtb (void)
 {
   inst.instruction = 0xeb20a40;
@@ -17267,7 +17289,8 @@
  NCE(vldr,      d100b00, 2, (RVSD, ADDRGLDC), neon_ldr_str),
  NCE(vstr,      d000b00, 2, (RVSD, ADDRGLDC), neon_ldr_str),
 
- nCEF(vcvt,     vcvt,    3, (RNSDQ, RNSDQ, oI32b), neon_cvt),
+ nCEF(vcvt,	vcvt,	 3, (RNSDQ, RNSDQ, oI32b), neon_cvt),
+ nCEF(vcvtr,	vcvt,	 2, (RNSDQ, RNSDQ), neon_cvtr),
  nCEF(vcvtb,	vcvt,	 2, (RVS, RVS), neon_cvtb),
  nCEF(vcvtt,	vcvt,	 2, (RVS, RVS), neon_cvtt),
 
