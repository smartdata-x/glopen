# Copyright 2010 The Native Client Authors.  All rights reserved.
# Use of this source code is governed by a BSD-style license that can
# be found in the LICENSE file.

######################################################################
# CONFIG
######################################################################

# NOTE: we assume you have a symlink "CLIENT" in this directory pointing
#       to your .../native_client directory
TC_ROOT=../../../toolchain

CFLAGS = $(CFLAGS_EXTRA)

######################################################################
.PHONY = clean 

.SUFFIXES : .c .o .bc

######################################################################
clean:
	rm -f *.bc *.o *.s *.x86 *.arm *.sfiarm *.c~ .h~ \
              $(IT) $(IT).* *.out src/*bc $(EXTRA_CLEAN)


pnacl_bin: $(IT).pnacl.arm $(IT).pnacl.opt.arm \
           $(IT).pnacl.x8632 $(IT).pnacl.opt.x8632 

nacl_bin: $(IT).nacl.x8632 $(IT).nacl.opt.x8632 

nosfi_bin: $(IT).gcc.x8632 $(IT).gcc.opt.x8632 \
	   $(IT).gcc.arm $(IT).gcc.opt.arm 

all: pnacl_bin nacl_bin nosfi_bin


     
######################################################################
LOCAL_GCC=/usr/bin/gcc
# straight x86 gcc
$(IT).gcc.x8632: $(SRC)
	$(LOCAL_GCC) -O0 -m32 $(CFLAGS) $(SRC)  -static  -lm  -o $@

# optmized x86 gcc
$(IT).gcc.opt.x8632: $(SRC)
	$(LOCAL_GCC) -O3 -m32 $(CFLAGS) $(SRC)  -static -lm  -o $@

######################################################################
LOCAL_CROSS_GCC=$(TC_ROOT)/linux_arm-trusted/arm-2009q3/bin/arm-none-linux-gnueabi-gcc
# straight arm gcc (code sourcery)
$(IT).gcc.arm: $(SRC)
	$(LOCAL_CROSS_GCC) -O0 -march=armv6 $(CFLAGS) $(SRC)  -static  -lm  -o $@

# optmized x86 gcc (code sourcery)
$(IT).gcc.opt.arm: $(SRC)
	$(LOCAL_CROSS_GCC) -O3 -march=armv6 $(CFLAGS) $(SRC)  -static -lm  -o $@

######################################################################
NACL_GCC=$(TC_ROOT)/linux_x86/sdk/nacl-sdk/bin/nacl-gcc

# nacl x86 gcc
$(IT).nacl.x8632: $(SRC)
	$(NACL_GCC) -O0 -m32 $(CFLAGS) $(SRC)  -static  -lm  -lnosys -o $@

# nacl optmized x86 gcc
$(IT).nacl.opt.x8632: $(SRC)
	$(NACL_GCC) -O3 -m32 $(CFLAGS) $(SRC)  -static -lm  -lnosys -o $@


######################################################################
# BITCODE - FRONTEND
BC_GCC=$(TC_ROOT)/linux_arm-untrusted/arm-none-linux-gnueabi/llvm-fake-bcgcc
BC_LD=$(TC_ROOT)/linux_arm-untrusted/arm-none-linux-gnueabi/llvm/bin/llvm-ld
BC_OPT=$(TC_ROOT)/linux_arm-untrusted/arm-none-linux-gnueabi/llvm/bin/opt

PNACL=--pnacl-driver-verbose

.c.bc:
	$(BC_GCC) $(PNACL) $(CFLAGS) -D__native_client__=1  $< -c -o $@


# llvm bit code 
# NOTE: BC_LD will append .bc automatically
$(IT).bc: $(SRC:%.c=%.bc)
	$(BC_LD) $(SRC:%.c=%.bc)  -o $(IT)

# llvm bit code optimized
$(IT).opt.bc: $(IT).bc
	$(BC_OPT) -f -O3 -std-compile-opts $< -o $@

######################################################################
# BITCODE - BACKEND - ARM

BC_ARM=$(TC_ROOT)/linux_arm-untrusted/arm-none-linux-gnueabi/llvm-fake-bcld-arm
LIB_BC=$(TC_ROOT)/pnacl-untrusted/bitcode

$(IT).pnacl.arm: $(IT).bc
	$(BC_ARM) $(PNACL) $(IT).bc -L$(LIB_BC) -lc -lm -lnacl -lpthread -lnosys  -o $@

$(IT).pnacl.opt.arm: $(IT).opt.bc
	$(BC_ARM) $(PNACL) $(IT).opt.bc -L$(LIB_BC) -lc -lm -lnacl -lpthread -lnosys  -o $@

######################################################################
# BITCODE - BACKEND - X8632
BC_X8632=$(TC_ROOT)/linux_arm-untrusted/arm-none-linux-gnueabi/llvm-fake-bcld-x86-32

$(IT).pnacl.x8632: $(IT).bc
	$(BC_X8632)  $(PNACL) $(IT).bc -L$(LIB_BC) -lc -lm -lnacl -lpthread -lnosys  -o $@
$(IT).pnacl.opt.x8632: $(IT).opt.bc
	$(BC_X8632) $(PNACL) $(IT).opt.bc -L$(LIB_BC) -lc -lm -lnacl -lpthread -lnosys  -o $@

